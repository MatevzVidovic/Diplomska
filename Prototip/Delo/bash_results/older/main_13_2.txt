Validation phase: False
Namespace(ips=0, bs=16, nodw=1, ntibp=10, sd='SegNet', ptd='./sclera_data', is_test_run=True, pruning_phase=False, pbop=False, e_ix=3, mti=1000000000.0, map=1000000000.0, nept=1, pnkao=20, nftp=1, rn='flops_num', ptp=0.01, tp=False)
path to file: ./sclera_data
summary for train
valid images: 1288
summary for val
valid images: 344
summary for test
valid images: 208
train dataset len: 30
val dataset len: 30
test dataset len: 30
train dataloader num of batches: 2
val dataloader num of batches: 2
test dataloader num of batches: 2
Device: cuda
0 trainings have been done without error stopping.
                        Best k models are kept. (possibly (k+1) models are kept if one of the worse models is the last model we have).
                        Enter s to save the model and re-ask for input.
                        Enter g to show the graph of the model and re-ask for input.
                        Enter r to trigger show_results() and re-ask for input.
                        Enter a number to reset in how many trainings we ask you this again, and re-ask for input.
                        Enter p to prune anyways (in production code, that is commented out, so the program will simply stop).
                        Press Enter to continue training.
                        Enter any other key to stop.
File SegNet_0_0_special_save.pth already exists in safety copies, skipping.
File SegNet_7_33.pth already exists in safety copies, skipping.
Copied SegNet_27_92_just_pruned.pth to ./SegNet/safety_copies/actual_safety_copies
File SegNet_7_34.pth already exists in safety copies, skipping.
CSV file ./SegNet/safety_copies/safety_copies_92_special_save.csv already exists. Please choose a different name or handle the existing file.

                        Enter g to show the graph of the model and re-ask for input.
                        Enter r to trigger show_results() and re-ask for input.
                        Enter a number to reset in how many trainings we ask you this again, and re-ask for input.
                        Enter p to prune anyways (in production code, that is commented out, so the program will simply stop).
                        Press Enter to continue training.
                        Enter any other key to stop.
